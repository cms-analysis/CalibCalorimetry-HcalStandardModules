process PEDS = {
   service = MessageLogger
    {
    untracked vstring destinations = { "cout" }
    untracked vstring categories = {  "DDLParser", "FwkJob", "FwkReport"}
    untracked PSet cout = {string threshold = "INFO"
                            PSet INFO        = { int32 limit = 10000 }
                            PSet DDLParser = { int32 limit = 0 }
                            PSet FwkJob = { int32 limit =10 }
                            PSet FwkReport = { int32 limit = 20 }
                            }
    }

// Local HCAL readout
//    source = HcalTBSource {
//            untracked vstring fileNames = {'file:/bigspool/cmsmoe3/HTB_000100.root' }
//            untracked int32 maxEvents = 1000
//            untracked vstring streams = { 'HCAL_DCC700:700','HCAL_Trigger','HCAL_SlowData','HCAL_QADCTDC' }
//        }

// Global TB06 data format
//    source = PoolSource {
//            untracked vstring fileNames = {'file:/data/data0/raw/h2.00030724.combined.OutServ_0.0.root'}
//            untracked int32 maxEvents = -1
//        }

// MTCC data format (*.root)
//    source = PoolConvert {
//            untracked vstring fileNames = {'file:/afs/cern.ch/user/m/michals/scratch0/mtcc.00002096.A.testStorageManager_0.0.root'}
//            untracked vstring fileNames = {'castor:/castor/cern.ch/cms/MTCC/data/00002096/A/mtcc.00002096.A.testStorageManager_0.0.root'}
//            untracked int32 maxEvents = -1
//      }

// MTCC data format (*.dat)
    source = NewEventStreamFileReader {
        string fileName = "/home/hcalmtcc/data_tmp/mtcc.00002378.A.testStorageManager_0.0.dat"
        untracked int32 maxEvents = -1
        int32 max_event_size = 2000000
        int32 max_queue_depth = 5
        }

	module unpacker = HcalRawToDigi {
                int32 firstSample = 0
                int32 lastSample = 9
                untracked bool UnpackCalib = false
                bool FilterDataQuality = true
                untracked int32 HcalFirstFED = 700
//                untracked vint32 FEDs = { 700 }
                untracked vint32 FEDs = { 700, 701, 702, 703, 704, 705 }
        }

// the following two modules are useful for TB data

        module tbunpacker = HcalTBObjectUnpacker {
               untracked int32 HcalTriggerFED = 1
               untracked int32 HcalSlowDataFED = -1
               untracked int32 HcalTDCFED = -1
               untracked int32 HcalSourcePositionFED = -1
               untracked bool IncludeUnmatchedHits = false
        }

        module myfilter = HcalTBTriggerFilter {
                bool AllowPedestal = true
                bool AllowPedestalInSpill = true
                bool AllowPedestalOutSpill = true
                bool AllowLaser = false
                bool AllowLED = false
                bool AllowBeam = false
        }

	module analpeds = HcalPedestalAnalyzer {
//               untracked string inputPedestalsSource = 'peds_ref.txt'
//               untracked string inputPedestalWidthsSource = 'widths_ref.txt'
               untracked string outputPedestalsDest = 'peds.txt'
               untracked string outputPedestalWidthsDest = 'widths.txt' 
               untracked string outputFileHist = 'peds.root'
               untracked int32 nevtsample = 9999999
               untracked int32 hiSaveflag = 0
               untracked int32 pedValflag = 0
	}

//	path p = { unpacker, tbunpacker, myfilter, analpeds }
	path p = { unpacker, analpeds }

// stuff for the calibration system

  es_module = HcalDbProducer {}

  es_source es_hardcode = HcalHardcodeCalibrations {untracked vstring toGet = {"Pedestals", "PedestalWidths", "Gains", "GainWidths", "QIEShape", "QIEData", "ChannelQuality"}}

  es_source es_ascii = HcalTextCalibrations { VPSet input = {
//    {string object = "ElectronicsMap" FileInPath file ='emap_tb06_v7.txt'}
    {string object = "ElectronicsMap" FileInPath file ='emap_mtcc_hbheho.txt'}
   }  
  }

}
